{"version":3,"sources":["assets/noPoster.png","Components/Header.js","api.js","Components/Loader.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","movieApi","get","term","query","encodeURIComponent","id","append_to_response","tvApi","Container","div","Loader","role","aria-label","Title","span","Grid","Section","title","children","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","length","substring","Home","useState","loading","setLoading","error","setError","nowPlaying","setNowPlaying","upComing","setUpComing","popular","setPopular","a","data","results","useEffect","getHome","Helmet","map","movie","key","poster_path","original_title","vote_average","release_date","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","state","this","setState","React","Component","Cotainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","search","Backdrop","bgImage","Content","Cover","Data","InfoContainer","Info","Divider","Summary","VideoContainer","Video","iframe","HomePage","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","videos","video","src","frameborder","allow","allowfullscreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","href","homepage","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8454a443.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.e4291339.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.7);\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 100px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"6d095688f630b2115d0be560ed267853\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n  tvDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 30px 0px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 30px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  margin-bottom: 5px;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            💖\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { movieApi } from \"api\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nexport default function Home() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [nowPlaying, setNowPlaying] = useState([]);\r\n  const [upComing, setUpComing] = useState([]);\r\n  const [popular, setPopular] = useState([]);\r\n  async function getHome() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await movieApi.nowPlaying();\r\n      setNowPlaying(nowPlaying);\r\n\r\n      const {\r\n        data: { results: upComing },\r\n      } = await movieApi.upComing();\r\n      setUpComing(upComing);\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await movieApi.popular();\r\n      setPopular(popular);\r\n    } catch {\r\n      setError(\"Cannot find movies infromation.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getHome();\r\n  }, []);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      <Helmet>\r\n        <title>Movies | Yeonflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          <Helmet>\r\n            <title>Movies | Yeonflix</title>\r\n          </Helmet>\r\n          {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section\r\n              title=\"Now Playing\"\r\n              children={nowPlaying.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            />\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section\r\n              title=\"Popular Movies\"\r\n              children={popular.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            />\r\n          )}\r\n          {upComing && upComing.length > 0 && (\r\n            <Section\r\n              title=\"Upcoming Movies\"\r\n              children={upComing.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            />\r\n          )}\r\n          {error && <Message text={error} color=\"#ec74c3c\" />}\r\n        </Container>\r\n      )}\r\n      ;\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | Yeonflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>TV | Yeonflix</title>\r\n        </Helmet>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section\r\n            title=\"Top Rated Shows \"\r\n            children={topRated.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          />\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section\r\n            title=\"Popular Shows \"\r\n            children={popular.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          />\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section\r\n            title=\"Airing Today \"\r\n            children={airingToday.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          />\r\n        )}\r\n        {error && <Message text={error} color=\"#ec74c3c\" />}\r\n      </Container>\r\n    )}\r\n    ;\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can not find tv infromation.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Cotainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResult,\r\n  tvResult,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Cotainer>\r\n    <Helmet>\r\n      <title>Search | Yeonflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResult && movieResult.length > 0 && (\r\n          <Section\r\n            title=\"Movie Results\"\r\n            children={movieResult.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          />\r\n        )}\r\n        {tvResult && tvResult.length > 0 && (\r\n          <Section\r\n            title=\"TV Results\"\r\n            children={tvResult.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          />\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message text={error} color=\"#ec74c3c\" />}\r\n    {movieResult &&\r\n      tvResult &&\r\n      movieResult.length === 0 &&\r\n      tvResult.length === 0 && <Message text=\"Nothing found\" color=\"#95a5a6\" />}\r\n  </Cotainer>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResult: PropTypes.array,\r\n  tvResult: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi } from \"../../api\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResult: null,\r\n    tvResult: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const {\r\n        data: { results: movieResult },\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResult },\r\n      } = await tvApi.search(searchTerm);\r\n\r\n      this.setState({\r\n        movieResult,\r\n        tvResult,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Cannot find results.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      movieResult,\r\n      tvResult,\r\n      searchTerm,\r\n      search,\r\n      error,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResult={movieResult}\r\n        tvResult={tvResult}\r\n        searchTerm={searchTerm}\r\n        search={search}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: calc(100vh-50px);\r\n  width: 100%;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(2px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 90vw;\r\n  height: 100vh;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 50%;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst Info = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0px 20px;\r\n`;\r\n\r\nconst Summary = styled.span`\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 70vw;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Video = styled.iframe`\r\n  padding: 10px 0px;\r\n  margin-right: 10px;\r\n  height: 30vh;\r\n  width: 20vw;\r\n`;\r\nconst HomePage = styled.a`\r\n  padding: 10px;\r\n  border: 1px solid #141414;\r\n  border-radius: 5px;\r\n  text-transform: uppercase;\r\n  background-color: #141414;\r\n  color: white;\r\n  font-weight: 600;\r\n  &:hover {\r\n    color: #141414;\r\n    background-color: white;\r\n    border-color: white;\r\n  }\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Yeonflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Yeonflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <InfoContainer>\r\n            <Info>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Info>\r\n            <Divider>▪</Divider>\r\n            <Info>\r\n              {result.runtime ? result.runtime : result.episode_run_time}ms\r\n            </Info>\r\n            <Divider>▪</Divider>\r\n            <Info>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name}/`\r\n                )}\r\n            </Info>\r\n            <Divider>▪</Divider>\r\n            <Info>\r\n              <span>{result.vote_average}/10 💖</span>\r\n            </Info>\r\n            <Divider>▪</Divider>\r\n          </InfoContainer>\r\n          <Summary>{result.overview}</Summary>\r\n          <VideoContainer>\r\n            {result.videos.results.map((video) => (\r\n              <Video\r\n                key={video.id}\r\n                src={`https://www.youtube.com/embed/${video.key}`}\r\n                frameborder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen=\"allowfullscreen\"\r\n                mozallowfullscreen=\"mozallowfullscreen\"\r\n                msallowfullscreen=\"msallowfullscreen\"\r\n                oallowfullscreen=\"oallowfullscreen\"\r\n                webkitallowfullscreen=\"webkitallowfullscreen\"\r\n              />\r\n            ))}\r\n          </VideoContainer>\r\n          <HomePage href={result.homepage}>homepage</HomePage>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result;\r\n    const { isMovie } = this.state;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.tvDetail(parsedId));\r\n      }\r\n      this.setState(result);\r\n    } catch {\r\n      this.setState({ error: \"Cannot find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Header from \"Components/Header\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" exact component={TV} />\r\n      <Route path=\"/search\" exact component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/tv/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n    <Header />\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color: inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:14px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n        \r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router />\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\nimport \"./api\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}